getwd()
###test to see if we can replicate the values with countinglab
setwd('/home/simon/Documents/CS229/Project/Code/CS229Project'
\
###test to see if we can replicate the values with countinglab
setwd('/home/simon/Documents/CS229/Project/Code/CS229Project')
data <- read.csv('/GECFCOM/mod_data.csv', header = TRUE)
data <- read.csv('/GEFCOM/mod_data.csv', header = TRUE)
data <- read.csv('GEFCOM/mod_data.csv', header = TRUE)
data
#add seasons
data$season <- data$month
data$season[2 < data$month && data$month < 9]
data$season[2 < data$month && data$month < 9] < 0
data$season[2 < data$month && data$month < 9] <- 0
data$season[2 >= data$month || data$month >= 9] <- 0
mean(data$season)
data$season[2 >= data$month || data$month >= 9] <- 1
mean(data$season)
data$season[2 < data$month && data$month < 9] <- 0
data$season[2 >= data$month || data$month >= 9] <- 1
mean(data$season)
2 >= 4
2 >= 4 || 4>=9
mean(data$month)
data$season[2 < data$month && data$month < 9] <- 0
mean(data$season)
data$season[2 < data$month && data$month < 9] <- 0
mean(data$season)
data$season[2 < data$month && data$month < 9]
2 < data$month && data$month < 9
data$month
#add seasons
data$season <- data$month
data$season[2 < data$month && data$month < 9] <- 0
data$season[2 >= data$month || data$month >= 9] <- 1
mean(data$season)
data$season[2 < data$month && data$month < 9] <- 0
mean(data$season)
data$season
#add seasons
data$season <- data$month
data$season[2 < data$month & data$month < 9] <- 0
data$season[2 >= data$month | data$month >= 9] <- 1
#add seasons
data$season <- data$month
data$season[2 < data$month & data$month < 9] <- 1
data$season[2 >= data$month | data$month >= 9] <- 0
data$season
#add seasons
data$season <- with(data, ifelse(month < 2 & month < 9, 0, 1))
mean(data$season)
data$season
data$month[800]
#add seasons
data$season <- with(data, ifelse(month > 2 & month < 9, 0, 1))
mean(data$season)
splitData = split(data, data[,c()])
splitData = split(data, data[,c(season, zone, weekday, hour)])
header(date)
header(data)
names(data)
splitData = split(data, data[,c('season', 'zone', 'weekday', 'hour')])
splitData[0]
splitData[[0]
]
splitData[[1]]
splitData[[2]]
splitData = split(data, data[,c('season', 'weekday', 'hour', 'zone')])
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + w1^2  + w1^2*totDay, data = data)
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + w1^2  + w1^2*totDay, data = splitData[[0]])
splitData[[0]]
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + w1^2  + w1^2*totDay, data = splitData[[1]])
fit.summary()
summary(fit)
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + w1*w1  + w1*w1*totDay, data = splitData[[1]])
fit
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
summary(fit)
MSE(fit)
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
mean(fit$residuals^2)
mse <- function(sm)
mean(sm$residuals^2)
mse(fit)
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
w
mse(fit)
#test fitting
for w in c(w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11){
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
#test fitting
for w in c(w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11){
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
#test fitting
for (w in c(w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11)){
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
fit <- lm(formula = 'load' ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
data$w = data$nam
#test fitting
for (i in 1:11)){
nam <- paste("w" + i, sep = "")
data$w = data$nam
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
nam <- paste("w", i, sep = "")
#test fitting
for (i in 1:11)){
nam <- paste("w", i, sep = "")
data$w = data$nam
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
fit <- lm(formula = data['load'] ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
fit <- lm(formula = data('load') ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
#test fitting
for (i in 1:11)){
nam <- paste("w", i, sep = "")
data$w = data$nam
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
nam
#test fitting
for (i in 1:11){
nam <- paste("w", i, sep = "")
data$w = data$nam
fit <- lm(formula = load ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
}
nam
data$w
data[1]
data[5]
names(data)
fit <- lm(formula = data[19] ~ totDay + w1 + totDay*w1 + I(w1^2) + I(w1^2)*totDay, data = splitData[[1]])
data$test = data[19]
data$test
names(data)
data$test = NULL
names(data)
#test fitting
for (i in 8:18){
data$w = data[i]
fit <- lm(formula = load ~ totDay + w + totDay*w + I(w^2) + I(w^2)*totDay, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
data$w = NULL
names(splitData[[1]])
#test fitting
for (i in 8:18){
splitData[[1]]$w = splitData[[1]][i]
fit <- lm(formula = load ~ totDay + w + totDay*w + I(w^2) + I(w^2)*totDay, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
names(splitData[[1]])
type(splitData[[1]][w])
class(splitData[[1]][w])
class(splitData[[1]]['w'])
class(splitData[[1]]['totDay'])
class(splitData[[1]]['tot'])
#test fitting
for (i in 8:18){
splitData[[1]]$w = splitData[[1]][i]
fit <- lm(formula = load ~ totDay + w + totDay*w + I(w^2) + I(w^2)*totDay, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
splitData[[1]]$w
names(splitData[[1]])
#test fitting
for (i in 8:18){
splitData[[1]]$w = splitData[[1]][i]
fit <- lm(formula = load ~ totDay + w + totDay*w + I(w^2) + I(w^2)*totDay, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
#test fitting
for (i in 8:18){
splitData[[1]]$w = splitData[[1]][i]
splitData[[1]]$w = as.data.frame(splitData[[1]]$w)
fit <- lm(formula = load ~ totDay + w + totDay*w + I(w^2) + I(w^2)*totDay, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
#test fitting
for (i in 8:18){
splitData[[1]]$w = splitData[[1]][i]
splitData[[1]]$w = as.data.frame(splitData[[1]]$w)
fit <- lm(formula = load ~ totDay + w + totDay*w, data = splitData[[1]])
print(paste('mse with weather station', i - 7, mse(fit)))
}
data['season']
lm(formula = data['load'] ~ data['totDay'])
lm(formula = data[load] ~ data['totDay'])
